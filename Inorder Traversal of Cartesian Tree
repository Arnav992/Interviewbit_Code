int find(vector<int> &A,int s,int e){
    int val=A[s], idx=s;
    for(int i=s; i<=e; i++)
        if(val<A[i])val=A[i], idx=i;
    return idx;
}
TreeNode* helper(vector<int>& A,int s,int e){
    if(s>e)return NULL;
    int idx=find(A, s, e);
    TreeNode* root=new TreeNode(A[idx]);
    root->left=helper(A, s, idx-1);
    root->right=helper(A, idx+1, e);
    return root;
}
TreeNode* Solution::buildTree(vector<int> &A){
    int n=A.size();
    return helper(A, 0, n-1);
}
